/*
 * Snyk API
 * Snyk helps software-driven businesses develop fast and stay secure. Continuously find and fix vulnerabilities for npm, Maven, NuGet, RubyGems, PyPI and more.
 *
 * The version of the OpenAPI document: REST
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CycloneDxDocument;
import com.konfigthis.client.model.CycloneDxXmlDocument;
import java.time.OffsetDateTime;
import com.konfigthis.client.model.SbomResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SbomApi
 */
@Disabled
public class SbomApiTest {

    private static SbomApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SbomApi(apiClient);
    }

    /**
     * Get a projectâ€™s SBOM document
     *
     * This endpoint lets you retrieve the SBOM document of a software project. It supports the following formats: * CycloneDX version 1.4 in JSON (set &#x60;format&#x60; to &#x60;cyclonedx1.4+json&#x60;). * CycloneDX version 1.4 in XML (set &#x60;format&#x60; to &#x60;cyclonedx1.4+xml&#x60;). * SPDX version 2.3 in JSON (set &#x60;format&#x60; to &#x60;spdx2.3+json&#x60;).  By default it will respond with an empty JSON:API response.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectDocumentTest() throws ApiException {
        String version = null;
        UUID orgId = null;
        UUID projectId = null;
        String format = null;
        Map<String, Object> response = api.getProjectDocument(version, orgId, projectId)
                .format(format)
                .execute();
        // TODO: test validations
    }

}
